apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: app-1
    name: app-1
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    selector:
      org.openhab.cloud.service: app-1
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: mongodb
    name: mongodb
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      org.openhab.cloud.service: mongodb
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: nginx
    name: nginx
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 8081
    - name: "443"
      port: 443
      targetPort: 8443
    selector:
      org.openhab.cloud.service: nginx
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: redis
    name: redis
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      org.openhab.cloud.service: redis
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: app-1
    name: app-1
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          org.openhab.cloud.service: app-1
      spec:
        containers:
        - image: docker.io/openhab/openhabcloud-app:latest
          name: app-1
          ports:
          - containerPort: 3000
          resources: {}
          env:
          - name: COMPOSE_PROJECT_NAME
            value: "openhab-cloud"
          - name: DOMAIN_NAME
            value: "localhost"
          - name: EMAIL
            value: "noreply@localhost.com"
          - name: EXPRESS_KEY
            value: "123456"
          workingDir: /opt/openhabcloud
          command: ["node"]
          args: ["app.js"]
          volumeMounts:
            - name: config-storage
              mountPath: /opt/openhabcloud/config.json
              subPath: config.json
        restartPolicy: Always
        volumes:
          - name: config-storage
            configMap:
              name: openhab-config
    selector:
      matchLabels:
        org.openhab.cloud.service: app-1
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: mongodb
    name: mongodb
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          org.openhab.cloud.service: mongodb
      spec:
        containers:
        - args:
          - mongod
          - --bind_ip_all
          image: bitnami/mongodb:latest
          name: mongodb
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: mongodb-empty0
          - mountPath: /data/configdb
            name: mongodb-empty1
        restartPolicy: Always
        volumes:
        - emptyDir: {}
          name: mongodb-empty0
        - emptyDir: {}
          name: mongodb-empty1
    selector:
      matchLabels:
        org.openhab.cloud.service: mongodb
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: nginx
    name: nginx
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          org.openhab.cloud.service: nginx
      spec:
        containers:
        - image: docker.io/openhab/openhabcloud-nginx
          name: nginx
          ports:
          - containerPort: 8081
          - containerPort: 8443
          resources: {}
          volumeMounts:
          - mountPath: /opt/openhabcloud
            name: app-1
        restartPolicy: Always
        volumes:
        - emptyDir: {}
          name: app-1
    selector:
      matchLabels:
        org.openhab.cloud.service: nginx
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      org.openhab.cloud.service: redis
    name: redis
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          org.openhab.cloud.service: redis
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            value: 123_openHAB
          image: bitnami/redis:latest
          name: redis
          ports:
          - containerPort: 6379
          resources: {}
        restartPolicy: Always
    selector:
      matchLabels:
        org.openhab.cloud.service: redis
  status: {}
kind: List
metadata: {}

